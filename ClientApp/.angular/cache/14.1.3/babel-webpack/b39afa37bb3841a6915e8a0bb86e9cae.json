{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n\nconst _c0 = function () {\n  return [\"explore\"];\n};\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {}\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)();\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-root\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[\"src\", \"../assets/duck_curve_wiki.png\", \"height\", \"400\"], [2, \"font-size\", \"0.8em\"], [1, \"nav-link\", 2, \"font-size\", \"1.2em\", 3, \"routerLink\"], [\"href\", \"https://github.com/carlsorenson1/duck-curve-analysis-java\", \"target\", \"_blank\", 1, \"nav-link\", 2, \"font-size\", \"1.2em\"], [\"src\", \"assets/external.png\", 1, \"external\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\")(1, \"h4\");\n        i0.ɵɵtext(2, \"Duck Curve - Background\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Electricity providers have traditionally had to manage peaks in electric use. On hot days there would be a peak in the afternoon as air conditioning caused high demand. There can also be peaks in the morning and early evening as people get ready for work or come home, turn on HVAC systems and lights, and cook dinner. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"The traditional pattern of peak demand is shifting in places where solar power is becoming significant. The midday peak can become the lowest net demand time period, as that's when the sun is shining. However, just as the solar power tapers off in the evening, people are arriving home and turning on appliances. This leads to a rapid rise in net electric demand, forming a curve that looks a bit like the profile of a duck sitting on water (orange line):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"img\", 0);\n        i0.ɵɵelementStart(8, \"p\", 1);\n        i0.ɵɵtext(9, \"(Via Wikipedia, credit: ArnoldReinhold - Own work based on data from caiso.org, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=52529738)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h4\");\n        i0.ɵɵtext(11, \"Analyzing my data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \"On the next page, 'Explore the Data', you will find a tool to see \");\n        i0.ɵɵelementStart(14, \"strong\");\n        i0.ɵɵtext(15, \"real data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" about my electricity use at my house, collected using an IotaWatt home energy monitor. It shows the power used during each half-hour period of the day, averaged across a whole month so that we can see a trend. The superimposed solar generation curve (simulated data, yellow) is added so that we can see how well my personal electricity use matches the theory and how solar would impact the grid, given my electric load profile.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \"This site uses a Java back end and an Angular/SVG front end, hosted with Elastic Beanstalk and S3. The Java back end provides an API that presents the data in a more useful way for the front end to consume - this includes calls to the emoncms service hosting my IotaWatt data, caching, and calculating the averages across full months. For the front end, I found SVG and Angular to be a great fit - as the data is updated, the chart changes along with it. IPv6 and https are implemented by using Cloudflare.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"a\", 2);\n        i0.ɵɵtext(20, \"Explore the data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 3);\n        i0.ɵɵtext(22, \"Explore the source code \");\n        i0.ɵɵelement(23, \"img\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    dependencies: [i1.RouterLinkWithHref],\n    encapsulation: 2\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}