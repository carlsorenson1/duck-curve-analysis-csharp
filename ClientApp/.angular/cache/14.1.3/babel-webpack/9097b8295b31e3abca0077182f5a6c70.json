{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./energy.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction ExploreComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", opt_r5.value)(\"selected\", opt_r5.value == ctx_r0.displayMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(opt_r5.text);\n  }\n}\n\nfunction ExploreComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ExploreComponent_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.previousMonth());\n    });\n    i0.ɵɵtext(2, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ExploreComponent_div_6_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.nextMonth());\n    });\n    i0.ɵɵtext(6, \">\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.startDate >= ctx_r1.currentMonth);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(4, 3, ctx_r1.currentMonth, \"MMMM yyyy\", \"+0000\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.currentMonth >= ctx_r1.endMonth);\n  }\n}\n\nfunction ExploreComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ExploreComponent_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.previousDay());\n    });\n    i0.ɵɵtext(2, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ExploreComponent_div_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.nextDay());\n    });\n    i0.ɵɵtext(6, \">\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.startDate >= ctx_r2.currentDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(4, 3, ctx_r2.currentDate, \"EEEE, MMMM d, yyyy\", \"+0000\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.currentDate >= ctx_r2.endDate);\n  }\n}\n\nfunction ExploreComponent_div_25__svg_ng_container_25__svg_text_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    const i_r15 = ctx_r17.index;\n    const dp_r14 = ctx_r17.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", \"translate(\" + (i_r15 * 25 + 70) + \",\" + (ctx_r16.xAxis + 58) + \") rotate(-90)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, dp_r14.startTime, \"HH:mm\"), \" \");\n  }\n}\n\nfunction ExploreComponent_div_25__svg_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"rect\", 20)(2, \"title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, ExploreComponent_div_25__svg_ng_container_25__svg_text_5_Template, 3, 5, \"text\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const dp_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", i_r15 * 25 + 55)(\"y\", ctx_r12.monthlyZeroLine - ctx_r12.max(ctx_r12.wattsToPixelsMonthly(dp_r14.averagePowerWatts), 0))(\"height\", ctx_r12.abs(ctx_r12.wattsToPixelsMonthly(dp_r14.averagePowerWatts)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dp_r14.averagePowerWatts + \" Watts at \" + i0.ɵɵpipeBind2(4, 5, dp_r14.startTime, \"HH:mm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r15 % 2 == 0);\n  }\n}\n\nfunction ExploreComponent_div_25__svg_polyline_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"polyline\", 23);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"points\", ctx_r13.solarLinePointsMonthly);\n  }\n}\n\nfunction ExploreComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"line\", 13)(3, \"line\", 14)(4, \"line\", 15)(5, \"line\", 15)(6, \"line\", 15)(7, \"line\", 15)(8, \"line\", 15)(9, \"line\", 15)(10, \"line\", 15);\n    i0.ɵɵelementStart(11, \"text\", 16);\n    i0.ɵɵtext(12, \"-2 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"text\", 16);\n    i0.ɵɵtext(14, \"-1 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"text\", 17);\n    i0.ɵɵtext(16, \"0 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"text\", 17);\n    i0.ɵɵtext(18, \"1 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"text\", 17);\n    i0.ɵɵtext(20, \"2 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"text\", 17);\n    i0.ɵɵtext(22, \"3 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"text\", 17);\n    i0.ɵɵtext(24, \"4 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, ExploreComponent_div_25__svg_ng_container_25_Template, 6, 8, \"ng-container\", 18);\n    i0.ɵɵtemplate(26, ExploreComponent_div_25__svg_polyline_26_Template, 1, 1, \"polyline\", 19);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y1\", ctx_r3.xAxis)(\"y2\", ctx_r3.xAxis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y2\", ctx_r3.xAxis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-2000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-2000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-1000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-1000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(0))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(1000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(1000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(2000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(2000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(3000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(3000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(4000))(\"y2\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(4000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-2000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(-1000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(1000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(2000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(3000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r3.monthlyZeroLine - ctx_r3.wattsToPixelsMonthly(4000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.calculatedDatapoints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.solarEnabled);\n  }\n}\n\nfunction ExploreComponent_div_26__svg_ng_container_31__svg_text_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext();\n    const i_r20 = ctx_r23.index;\n    const dp_r19 = ctx_r23.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", \"translate(\" + (i_r20 * 25 + 70) + \",\" + (ctx_r21.xAxis + 58) + \") rotate(-90)\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, dp_r19.startTime, \"HH:mm\"), \" \");\n  }\n}\n\nfunction ExploreComponent_div_26__svg_ng_container_31__svg_polyline_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"polyline\", 23);\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"points\", ctx_r22.solarLinePointsDaily);\n  }\n}\n\nfunction ExploreComponent_div_26__svg_ng_container_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"rect\", 20)(2, \"title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, ExploreComponent_div_26__svg_ng_container_31__svg_text_5_Template, 3, 5, \"text\", 21);\n    i0.ɵɵtemplate(6, ExploreComponent_div_26__svg_ng_container_31__svg_polyline_6_Template, 1, 1, \"polyline\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const dp_r19 = ctx.$implicit;\n    const i_r20 = ctx.index;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", i_r20 * 25 + 55)(\"y\", ctx_r18.dailyZeroLine - ctx_r18.max(ctx_r18.wattsToPixelsSingle(dp_r19.averagePowerWatts), 0))(\"height\", ctx_r18.abs(ctx_r18.wattsToPixelsSingle(dp_r19.averagePowerWatts)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dp_r19.averagePowerWatts + \" Watts at \" + i0.ɵɵpipeBind2(4, 6, dp_r19.startTime, \"HH:mm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r20 % 2 == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.solarEnabled);\n  }\n}\n\nfunction ExploreComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"line\", 13)(3, \"line\", 14)(4, \"line\", 15)(5, \"line\", 15)(6, \"line\", 15)(7, \"line\", 15)(8, \"line\", 15)(9, \"line\", 15)(10, \"line\", 15)(11, \"line\", 15)(12, \"line\", 15);\n    i0.ɵɵelementStart(13, \"text\", 24);\n    i0.ɵɵtext(14, \"-2 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"text\", 25);\n    i0.ɵɵtext(16, \"0 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"text\", 25);\n    i0.ɵɵtext(18, \"2 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"text\", 25);\n    i0.ɵɵtext(20, \"4 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"text\", 25);\n    i0.ɵɵtext(22, \"6 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"text\", 25);\n    i0.ɵɵtext(24, \"8 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"text\", 16);\n    i0.ɵɵtext(26, \"10 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"text\", 16);\n    i0.ɵɵtext(28, \"12 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"text\", 16);\n    i0.ɵɵtext(30, \"14 kW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(31, ExploreComponent_div_26__svg_ng_container_31_Template, 7, 9, \"ng-container\", 18);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y1\", ctx_r4.xAxis)(\"y2\", ctx_r4.xAxis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y2\", ctx_r4.xAxis);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(-2000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(-2000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(0))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(2000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(2000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(4000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(4000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(6000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(6000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(8000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(8000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(10000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(10000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(12000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(12000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(14000))(\"y2\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(14000));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(-2000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(2000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(4000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(6000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(8000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(10000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(12000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"y\", ctx_r4.dailyZeroLine - ctx_r4.wattsToPixelsSingle(14000));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.calculatedDatapoints);\n  }\n}\n\nexport let ExploreComponent = /*#__PURE__*/(() => {\n  class ExploreComponent {\n    constructor(energyDataService) {\n      this.energyDataService = energyDataService;\n      this.currentDate = new Date();\n      this.currentMonth = new Date();\n      this.startDate = new Date();\n      this.endDate = new Date();\n      this.endMonth = new Date();\n      this.displayMode = \"\";\n      this.totalPowerDatapoints = [];\n      this.whDatapoints = [];\n      this.carDatapoints = [];\n      this.hvacDatapoints = [];\n      this.calculatedDatapoints = [];\n      this.solarDatapoints = [];\n      this.solarLinePointsMonthly = \"\";\n      this.solarLinePointsDaily = \"\";\n      this.rampRateDownAverage = 0;\n      this.rampRateDownMedian = 0;\n      this.rampRateDownExtreme = 0;\n      this.rampRateUpAverage = 0;\n      this.rampRateUpMedian = 0;\n      this.rampRateUpExtreme = 0;\n      this.solarEnabled = true;\n      this.waterHeaterEnabled = true;\n      this.carEnabled = true;\n      this.hvacEnabled = true;\n      this.displayModes = [{\n        value: 'weekdays',\n        text: 'Weekday average'\n      }, {\n        value: 'weekends',\n        text: 'Weekend average'\n      }, {\n        value: 'all',\n        text: 'All days average'\n      }, {\n        value: 'single',\n        text: 'Single days only'\n      }];\n      this.monthlyZeroLine = 350;\n      this.dailyZeroLine = 465;\n      this.xAxis = 558;\n    }\n\n    onChangeDisplayMode(event) {\n      var mode = event.target.value;\n      this.log(mode);\n      this.displayMode = mode;\n      this.updateDatapoints();\n    }\n\n    wattsToPixelsMonthly(watts, pxOffset = 0) {\n      return watts / 12 + pxOffset;\n    }\n\n    wattsToPixelsSingle(watts, pxOffset = 0) {\n      return watts / 32 + pxOffset;\n    }\n\n    abs(value) {\n      return Math.abs(value);\n    }\n\n    max(value1, value2) {\n      return Math.max(value1, value2);\n    }\n\n    previousMonth() {\n      const newDate = new Date(this.currentMonth.valueOf());\n      let month = newDate.getUTCMonth();\n\n      if (month === 1) {\n        month = 12;\n        const year = newDate.getUTCFullYear() - 1;\n        newDate.setUTCFullYear(year);\n      } else {\n        month = month - 1;\n      }\n\n      newDate.setUTCMonth(month);\n      this.currentMonth = newDate;\n      this.updateDatapoints();\n    }\n\n    nextMonth() {\n      const newDate = new Date(this.currentMonth.valueOf());\n      let month = newDate.getUTCMonth();\n\n      if (month === 12) {\n        month = 1;\n        const year = newDate.getUTCFullYear() + 1;\n        newDate.setUTCFullYear(year);\n      } else {\n        month = month + 1;\n      }\n\n      newDate.setUTCMonth(month);\n      this.currentMonth = newDate;\n      this.updateDatapoints();\n    }\n\n    previousDay() {\n      const newDate = new Date(this.currentDate.valueOf());\n      newDate.setUTCDate(newDate.getUTCDate() - 1);\n      this.currentDate = newDate;\n      this.updateDatapoints();\n    }\n\n    nextDay() {\n      const newDate = new Date(this.currentDate.valueOf());\n      newDate.setUTCDate(newDate.getUTCDate() + 1);\n      this.currentDate = newDate;\n      this.updateDatapoints();\n    }\n\n    updateDatapoints() {\n      switch (this.displayMode) {\n        case 'weekdays':\n        case 'weekends':\n        case 'all':\n          if (!this.waterHeaterEnabled) {\n            this.energyDataService.getEnergyAverages('wh', this.displayMode, this.currentMonth).subscribe(datapoints => {\n              this.whDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          if (!this.carEnabled) {\n            this.energyDataService.getEnergyAverages('car', this.displayMode, this.currentMonth).subscribe(datapoints => {\n              this.carDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          if (!this.hvacEnabled) {\n            this.energyDataService.getEnergyAverages('hvac', this.displayMode, this.currentMonth).subscribe(datapoints => {\n              this.hvacDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          this.energyDataService.getEnergyAverages('total', this.displayMode, this.currentMonth).subscribe(datapoints => {\n            this.totalPowerDatapoints = datapoints;\n            this.recalculateDatapoints();\n          }, error => {\n            this.log(error);\n          });\n          break;\n\n        case 'single':\n          if (!this.waterHeaterEnabled) {\n            this.energyDataService.getEnergyForDate('wh', this.currentDate).subscribe(datapoints => {\n              this.whDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          if (!this.carEnabled) {\n            this.energyDataService.getEnergyForDate('car', this.currentDate).subscribe(datapoints => {\n              this.carDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          if (!this.hvacEnabled) {\n            this.energyDataService.getEnergyForDate('hvac', this.currentDate).subscribe(datapoints => {\n              this.hvacDatapoints = datapoints;\n              this.recalculateDatapoints();\n            }, error => {\n              this.log(error);\n            });\n          }\n\n          this.energyDataService.getEnergyForDate('total', this.currentDate).subscribe(datapoints => {\n            this.totalPowerDatapoints = datapoints;\n            this.recalculateDatapoints();\n          }, error => {\n            this.log(error);\n          });\n          break;\n      }\n    }\n\n    recalculateDatapoints() {\n      if (this.calculatedDatapoints == null || this.calculatedDatapoints.length == 0) {\n        this.calculatedDatapoints = new Array(48);\n\n        for (let i = 0; i < 48; i++) {\n          this.calculatedDatapoints[i] = {\n            startTime: new Date(),\n            averagePowerWatts: 0\n          };\n        }\n      }\n\n      for (let i = 0; i < 48; i++) {\n        const solarWatts = this.solarEnabled ? this.solarDatapoints[i].averagePowerWatts : 0;\n        this.calculatedDatapoints[i].averagePowerWatts = this.totalPowerDatapoints[i].averagePowerWatts - solarWatts;\n        this.calculatedDatapoints[i].startTime = this.totalPowerDatapoints[i].startTime;\n\n        if (!this.waterHeaterEnabled && this.whDatapoints != null) {\n          this.calculatedDatapoints[i].averagePowerWatts -= this.whDatapoints[i].averagePowerWatts;\n        }\n\n        if (!this.carEnabled && this.carDatapoints != null) {\n          this.calculatedDatapoints[i].averagePowerWatts -= this.carDatapoints[i].averagePowerWatts;\n        }\n\n        if (!this.hvacEnabled && this.hvacDatapoints != null) {\n          this.calculatedDatapoints[i].averagePowerWatts -= this.hvacDatapoints[i].averagePowerWatts;\n        }\n      }\n\n      this.calculateRampRates();\n    }\n\n    calculateRampRates() {\n      const up = new Array(10);\n      const down = new Array(10);\n      let last = this.calculatedDatapoints[30].averagePowerWatts;\n\n      for (let i = 31; i < 41; i++) {\n        up[i - 31] = this.calculatedDatapoints[i].averagePowerWatts - last;\n        last = this.calculatedDatapoints[i].averagePowerWatts;\n      }\n\n      this.rampRateUpAverage = this.average(...up);\n      this.rampRateUpMedian = this.median(...up);\n      this.rampRateUpExtreme = this.extreme(...up);\n      last = this.calculatedDatapoints[12].averagePowerWatts;\n\n      for (let i = 13; i < 23; i++) {\n        down[i - 13] = this.calculatedDatapoints[i].averagePowerWatts - last;\n        last = this.calculatedDatapoints[i].averagePowerWatts;\n      }\n\n      this.rampRateDownAverage = this.average(...down);\n      this.rampRateDownMedian = this.median(...down);\n      this.rampRateDownExtreme = this.extreme(...down);\n    }\n\n    extreme(...values) {\n      let extreme = 0;\n      values.forEach(v => {\n        if (Math.abs(v) > Math.abs(extreme)) {\n          extreme = v;\n        }\n      });\n      return extreme;\n    }\n\n    average(...values) {\n      let sum = 0;\n      values.forEach(v => {\n        sum += v;\n      });\n      return sum / values.length;\n    }\n\n    median(...values) {\n      // The default sort is lexicographical.\n      values.sort((v1, v2) => {\n        if (v1 > v2) {\n          return 1;\n        }\n\n        if (v1 < v2) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      if (values.length % 2 === 0) {\n        return (values[values.length / 2 - 1] + values[values.length / 2]) / 2;\n      } else {\n        return values[(values.length - 1) / 2];\n      }\n    }\n\n    log(message) {\n      console.log(message); // document.getElementById('debugDiv').innerHTML += ('<p>' + message + '</p>');\n    }\n\n    ngOnInit() {\n      this.log('initing');\n      this.currentDate = new Date('2023-01-01');\n      this.endDate = new Date('2023-01-31');\n      this.endMonth = new Date('2023-01-01');\n      this.currentMonth = new Date('2023-01-01');\n      this.currentMonth.setUTCDate(1);\n      this.startDate = new Date('2023-01-01');\n      this.displayMode = 'weekdays';\n      this.energyDataService.getSolarValues().subscribe(solarValues => {\n        this.solarDatapoints = solarValues;\n        this.solarLinePointsMonthly = '';\n        this.solarLinePointsDaily = '';\n\n        for (let i = 14; i < 39; i++) {\n          this.solarLinePointsMonthly += i * 25 + 65 + ' ' + (this.monthlyZeroLine - this.wattsToPixelsMonthly(this.solarDatapoints[i].averagePowerWatts)) + ',';\n          this.solarLinePointsDaily += i * 25 + 65 + ' ' + (this.dailyZeroLine - this.wattsToPixelsSingle(this.solarDatapoints[i].averagePowerWatts)) + ',';\n        }\n\n        this.solarLinePointsMonthly = this.solarLinePointsMonthly.slice(0, -1);\n        this.solarLinePointsDaily = this.solarLinePointsDaily.slice(0, -1);\n        this.updateDatapoints();\n      }, error => {\n        this.log(error);\n      });\n    }\n\n  }\n\n  ExploreComponent.ɵfac = function ExploreComponent_Factory(t) {\n    return new (t || ExploreComponent)(i0.ɵɵdirectiveInject(i1.EnergyService));\n  };\n\n  ExploreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExploreComponent,\n    selectors: [[\"app-root\"]],\n    decls: 63,\n    vars: 15,\n    consts: [[2, \"margin-right\", \"15px\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"headerblock\", 4, \"ngIf\"], [1, \"headerblock\"], [1, \"toggle\", 3, \"click\"], [\"type\", \"checkbox\", 3, \"checked\"], [\"style\", \"margin-top: 10px; max-width: 1000px;\", 4, \"ngIf\"], [2, \"margin\", \"15px 0\"], [1, \"arrow\"], [3, \"value\", \"selected\"], [3, \"disabled\", \"click\"], [2, \"margin-top\", \"10px\", \"max-width\", \"1000px\"], [\"id\", \"chart-container\", \"viewBox\", \"0 0 1255 620\", \"font-family\", \"Verdana\", \"font-size\", \"14\"], [\"x1\", \"48\", \"x2\", \"1250\", \"stroke-width\", \"1\", \"stroke\", \"black\"], [\"x1\", \"48\", \"y1\", \"0\", \"x2\", \"48\", \"stroke-width\", \"1\", \"stroke\", \"black\"], [\"x1\", \"48\", \"x2\", \"1255\", \"stroke-width\", \"1\", \"stroke\", \"black\"], [\"x\", \"0\"], [\"x\", \"5\"], [4, \"ngFor\", \"ngForOf\"], [\"fill\", \"none\", \"stroke\", \"gold\", \"stroke-width\", \"4\", 4, \"ngIf\"], [\"width\", \"20\", \"fill\", \"#6a8acc\", \"shape-rendering\", \"crispEdges\"], [\"x\", \"1\", \"y\", \"0\", \"style\", \"font-size: 16px;\", 4, \"ngIf\"], [\"x\", \"1\", \"y\", \"0\", 2, \"font-size\", \"16px\"], [\"fill\", \"none\", \"stroke\", \"gold\", \"stroke-width\", \"4\"], [\"x\", \"2\"], [\"x\", \"8\"]],\n    template: function ExploreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\")(1, \"h3\");\n        i0.ɵɵtext(2, \"Energy use\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3, \" Showing: \");\n        i0.ɵɵelementStart(4, \"select\", 0);\n        i0.ɵɵlistener(\"change\", function ExploreComponent_Template_select_change_4_listener($event) {\n          return ctx.onChangeDisplayMode($event);\n        });\n        i0.ɵɵtemplate(5, ExploreComponent_option_5_Template, 2, 3, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, ExploreComponent_div_6_Template, 7, 7, \"div\", 2);\n        i0.ɵɵtemplate(7, ExploreComponent_div_7_Template, 7, 7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"strong\");\n        i0.ɵɵtext(10, \"Include\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \": \");\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function ExploreComponent_Template_div_click_12_listener() {\n          ctx.waterHeaterEnabled = !ctx.waterHeaterEnabled;\n          return ctx.updateDatapoints();\n        });\n        i0.ɵɵtext(13, \"Water heater \");\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function ExploreComponent_Template_div_click_15_listener() {\n          ctx.carEnabled = !ctx.carEnabled;\n          return ctx.updateDatapoints();\n        });\n        i0.ɵɵtext(16, \"Car \");\n        i0.ɵɵelement(17, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function ExploreComponent_Template_div_click_18_listener() {\n          ctx.hvacEnabled = !ctx.hvacEnabled;\n          return ctx.updateDatapoints();\n        });\n        i0.ɵɵtext(19, \"HVAC \");\n        i0.ɵɵelement(20, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function ExploreComponent_Template_div_click_21_listener() {\n          ctx.solarEnabled = !ctx.solarEnabled;\n          return ctx.recalculateDatapoints();\n        });\n        i0.ɵɵtext(22, \"Simulated solar generation \");\n        i0.ɵɵelement(23, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵtemplate(25, ExploreComponent_div_25_Template, 27, 26, \"div\", 6);\n        i0.ɵɵtemplate(26, ExploreComponent_div_26_Template, 32, 31, \"div\", 6);\n        i0.ɵɵelementStart(27, \"div\", 7)(28, \"h3\");\n        i0.ɵɵtext(29, \"Ramp rates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"p\");\n        i0.ɵɵtext(31, \"Half-hourly change in watts. Positive values are ramp up (increasing grid demand); negative values are ramp down (decreasing grid demand).\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"table\")(33, \"tr\");\n        i0.ɵɵelement(34, \"th\");\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Average\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵtext(38, \"Median\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"th\");\n        i0.ɵɵtext(40, \"Extreme\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"tr\")(42, \"td\")(43, \"span\", 8);\n        i0.ɵɵtext(44, \"\\u2193\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(45, \" between 06:00 and 11:00\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"td\");\n        i0.ɵɵtext(47);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"td\");\n        i0.ɵɵtext(49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"td\");\n        i0.ɵɵtext(51);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"tr\")(53, \"td\")(54, \"span\", 8);\n        i0.ɵɵtext(55, \"\\u2191\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(56, \" between 15:00 and 20:00\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"td\");\n        i0.ɵɵtext(58);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"td\");\n        i0.ɵɵtext(60);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"td\");\n        i0.ɵɵtext(62);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.displayModes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMode != \"single\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMode == \"single\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.waterHeaterEnabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.carEnabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.hvacEnabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.solarEnabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMode != \"single\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMode == \"single\");\n        i0.ɵɵadvance(21);\n        i0.ɵɵtextInterpolate(ctx.rampRateDownAverage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rampRateDownMedian);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rampRateDownExtreme);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.rampRateUpAverage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rampRateUpMedian);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rampRateUpExtreme);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i2.DatePipe],\n    encapsulation: 2\n  });\n  return ExploreComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}